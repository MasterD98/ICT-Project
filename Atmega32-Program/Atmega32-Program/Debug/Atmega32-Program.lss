
Atmega32-Program.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000164  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000164  000001d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001ee  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000220  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000941  00000000  00000000  000002ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000063a  00000000  00000000  00000bed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a8  00000000  00000000  00001227  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  000015d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000389  00000000  00000000  00001674  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000352  00000000  00000000  000019fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001d4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e6       	ldi	r30, 0x64	; 100
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 a0 00 	call	0x140	; 0x140 <main>
  7a:	0c 94 b0 00 	jmp	0x160	; 0x160 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_Command>:
}

void LCD_Clear()
{
	LCD_Command (0x01);		/* clear display */
	LCD_Command (0x80);		/* cursor at home position */
  82:	88 bb       	out	0x18, r24	; 24
  84:	85 b3       	in	r24, 0x15	; 21
  86:	8e 7f       	andi	r24, 0xFE	; 254
  88:	85 bb       	out	0x15, r24	; 21
  8a:	85 b3       	in	r24, 0x15	; 21
  8c:	8d 7f       	andi	r24, 0xFD	; 253
  8e:	85 bb       	out	0x15, r24	; 21
  90:	85 b3       	in	r24, 0x15	; 21
  92:	84 60       	ori	r24, 0x04	; 4
  94:	85 bb       	out	0x15, r24	; 21
  96:	82 e0       	ldi	r24, 0x02	; 2
  98:	8a 95       	dec	r24
  9a:	f1 f7       	brne	.-4      	; 0x98 <LCD_Command+0x16>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <LCD_Command+0x1c>
  9e:	85 b3       	in	r24, 0x15	; 21
  a0:	8b 7f       	andi	r24, 0xFB	; 251
  a2:	85 bb       	out	0x15, r24	; 21
  a4:	8f e6       	ldi	r24, 0x6F	; 111
  a6:	97 e1       	ldi	r25, 0x17	; 23
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <LCD_Command+0x26>
  ac:	00 c0       	rjmp	.+0      	; 0xae <LCD_Command+0x2c>
  ae:	00 00       	nop
  b0:	08 95       	ret

000000b2 <LCD_Char>:
  b2:	88 bb       	out	0x18, r24	; 24
  b4:	85 b3       	in	r24, 0x15	; 21
  b6:	81 60       	ori	r24, 0x01	; 1
  b8:	85 bb       	out	0x15, r24	; 21
  ba:	85 b3       	in	r24, 0x15	; 21
  bc:	8d 7f       	andi	r24, 0xFD	; 253
  be:	85 bb       	out	0x15, r24	; 21
  c0:	85 b3       	in	r24, 0x15	; 21
  c2:	84 60       	ori	r24, 0x04	; 4
  c4:	85 bb       	out	0x15, r24	; 21
  c6:	82 e0       	ldi	r24, 0x02	; 2
  c8:	8a 95       	dec	r24
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCD_Char+0x16>
  cc:	00 c0       	rjmp	.+0      	; 0xce <LCD_Char+0x1c>
  ce:	85 b3       	in	r24, 0x15	; 21
  d0:	8b 7f       	andi	r24, 0xFB	; 251
  d2:	85 bb       	out	0x15, r24	; 21
  d4:	8f ec       	ldi	r24, 0xCF	; 207
  d6:	97 e0       	ldi	r25, 0x07	; 7
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <LCD_Char+0x26>
  dc:	00 c0       	rjmp	.+0      	; 0xde <LCD_Char+0x2c>
  de:	00 00       	nop
  e0:	08 95       	ret

000000e2 <LCD_Init>:
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	84 bb       	out	0x14, r24	; 20
  e6:	87 bb       	out	0x17, r24	; 23
  e8:	8f e3       	ldi	r24, 0x3F	; 63
  ea:	9c e9       	ldi	r25, 0x9C	; 156
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <LCD_Init+0xa>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <LCD_Init+0x10>
  f2:	00 00       	nop
  f4:	88 e3       	ldi	r24, 0x38	; 56
  f6:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
  fa:	8c e0       	ldi	r24, 0x0C	; 12
  fc:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 100:	86 e0       	ldi	r24, 0x06	; 6
 102:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 10c:	80 e8       	ldi	r24, 0x80	; 128
 10e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 112:	08 95       	ret

00000114 <LCD_String>:
 114:	0f 93       	push	r16
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	8c 01       	movw	r16, r24
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	03 c0       	rjmp	.+6      	; 0x12a <LCD_String+0x16>
 124:	0e 94 59 00 	call	0xb2	; 0xb2 <LCD_Char>
 128:	21 96       	adiw	r28, 0x01	; 1
 12a:	f8 01       	movw	r30, r16
 12c:	ec 0f       	add	r30, r28
 12e:	fd 1f       	adc	r31, r29
 130:	80 81       	ld	r24, Z
 132:	81 11       	cpse	r24, r1
 134:	f7 cf       	rjmp	.-18     	; 0x124 <LCD_String+0x10>
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	1f 91       	pop	r17
 13c:	0f 91       	pop	r16
 13e:	08 95       	ret

00000140 <main>:
}
 
int main()
{

	LCD_Init();			/* Initialize LCD */
 140:	0e 94 71 00 	call	0xe2	; 0xe2 <LCD_Init>

	LCD_String("Hello!!");	/* write string on 1st line of LCD*/
 144:	80 e6       	ldi	r24, 0x60	; 96
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_String>
	LCD_Command(0xC0);		/* Go to 2nd line*/
 14c:	80 ec       	ldi	r24, 0xC0	; 192
 14e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_String("My Friends :)");	/* Write string on 2nd line*/
 152:	88 e6       	ldi	r24, 0x68	; 104
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_String>

	return 0;
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	08 95       	ret

00000160 <_exit>:
 160:	f8 94       	cli

00000162 <__stop_program>:
 162:	ff cf       	rjmp	.-2      	; 0x162 <__stop_program>
